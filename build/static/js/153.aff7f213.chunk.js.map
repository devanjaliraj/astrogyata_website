{"version":3,"sources":["pages/shop/ShopListTwoColumn.js","components/product/ShopTopFilter.js","components/product/ShopTopActionFilter.js","wrappers/product/ShopTopbarFilter.js"],"names":["connect","state","products","productData","location","useState","layout","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","pathname","useEffect","getSortedProducts","filterSortedProducts","slice","name","content","to","process","headerTop","className","getLayout","getFilterSortParams","productCount","length","sortedProductCount","getSortParams","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","ShopTopFilter","uniqueCategories","getIndividualCategories","uniqueColors","getIndividualColors","uniqueSizes","getProductsIndividualSizes","uniqueTags","getIndividualTags","id","map","category","key","onClick","e","setActiveSort","color","size","tag","ShopTopActionFilter","onChange","target","value","toggleShopTopFilter","ShopTopbar"],"mappings":"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","file":"static/js/153.aff7f213.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSortedProducts } from \"../../helpers/product\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopTopbarFilter from \"../../wrappers/product/ShopTopbarFilter\";\r\nimport ShopProducts from \"../../wrappers/product/ShopProducts\";\r\n\r\nconst ShopListTwoColumn = ({ location, products }) => {\r\n  const [layout, setLayout] = useState(\"list two-column\");\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n\r\n  const pageLimit = 16;\r\n  const { pathname } = location;\r\n\r\n  const getLayout = layout => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Flone | Shop Page</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Shop\r\n      </BreadcrumbsItem>\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                {/* shop topbar filter */}\r\n                <ShopTopbarFilter\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopListTwoColumn.propTypes = {\r\n  location: PropTypes.object,\r\n  products: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.productData.products\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShopListTwoColumn);\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes,\r\n  setActiveSort\r\n} from \"../../helpers/product\";\r\n\r\nconst ShopTopFilter = ({ products, getSortParams }) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  const uniqueSizes = getProductsIndividualSizes(products);\r\n  const uniqueTags = getIndividualTags(products);\r\n\r\n  return (\r\n    <div className=\"product-filter-wrapper\" id=\"product-filter-wrapper\">\r\n      <div className=\"product-filter-wrapper__inner\">\r\n        <div className=\"row\">\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Categories</h5>\r\n              {uniqueCategories ? (\r\n                <ul>\r\n                  {uniqueCategories.map((category, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"category\", category);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {category}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No categories found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Color</h5>\r\n              {uniqueColors ? (\r\n                <ul>\r\n                  {uniqueColors.map((color, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"color\", color);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {color}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No colors found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Size</h5>\r\n              {uniqueSizes ? (\r\n                <ul>\r\n                  {uniqueSizes.map((size, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          className=\"text-uppercase\"\r\n                          onClick={e => {\r\n                            getSortParams(\"size\", size);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {size}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No sizes found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter product-filter--tag\">\r\n              <h5>Tag</h5>\r\n              {uniqueTags ? (\r\n                <ul>\r\n                  {uniqueTags.map((tag, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"tag\", tag);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {tag}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No tags found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopFilter.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array\r\n};\r\n\r\nexport default ShopTopFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopFilter from \"./ShopTopFilter\";\r\nimport { toggleShopTopFilter } from \"../../helpers/product\";\r\n\r\nconst ShopTopActionFilter = ({\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"shop-top-bar mb-35\">\r\n        <div className=\"select-shoing-wrap\">\r\n          <div className=\"shop-select\">\r\n            <select\r\n              onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n            >\r\n              <option value=\"default\">Default</option>\r\n              <option value=\"priceHighToLow\">Price - High to Low</option>\r\n              <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n            </select>\r\n          </div>\r\n          <p>\r\n            Showing {sortedProductCount} of {productCount} result\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"filter-active\">\r\n          <button onClick={e => toggleShopTopFilter(e)}>\r\n            <i className=\"fa fa-plus\"></i> filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* shop top filter */}\r\n      <ShopTopFilter products={products} getSortParams={getSortParams} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopActionFilter.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopActionFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopActionFilter from \"../../components/product/ShopTopActionFilter\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopActionFilter\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        sortedProductCount={sortedProductCount}\r\n        products={products}\r\n        getSortParams={getSortParams}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n"],"sourceRoot":""}