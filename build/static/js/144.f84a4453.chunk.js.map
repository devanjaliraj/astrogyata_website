{"version":3,"sources":["components/astrology/sliderdemo.js","components/astrology/sliderlist.js"],"names":["SliderDemo","data","sliderClass","sliderdemoClass","useState","setBestAstrology","useEffect","className","to","_id","src","img","alt","fullname","exp_in_years","callCharge","conrubute_hrs","status","onClick","console","log","mobileNo","localStorage","getItem","obj","userid","JSON","parse","astroid","From","mobile","To","axiosConfig","post","then","response","catch","error","handleCalltogyta","class","SliderList","spaceTopClass","spaceBottomClass","spaceLeftClass","spaceRightClass","bgColorClass","settings","backgroundImage","slidesPerView","loop","autoplay","delay","disableOnInteraction","breakpoints","768","direction","spaceBetween","640","320","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","testimonialData","setTestimonialData","get","textbottom","map","single","key"],"mappings":"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","file":"static/js/144.f84a4453.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axiosConfig from \"../../axiosConfig\";\r\nconst SliderDemo = ({ data, sliderClass, sliderdemoClass }) => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [bestAstrology, setBestAstrology] = useState(data);\r\n\r\n  const handleCalltogyta = data => {\r\n    console.log(data);\r\n\r\n    let mobileNo = localStorage.getItem(\"user_mobile_no\");\r\n    let userId = JSON.parse(localStorage.getItem(\"user_id\"));\r\n\r\n    let obj = {\r\n      userid: userId,\r\n      astroid: data._id,\r\n      From: data.mobile, //astrologer no\r\n      To: mobileNo, //parseInt(this.state.number) user no\r\n    };\r\n    axiosConfig\r\n      .post(`/user/make_call`, obj)\r\n\r\n      .then(response => {\r\n        console.log(response);\r\n      })\r\n\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    setBestAstrology(data);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div\r\n      className={`${sliderdemoClass ? sliderdemoClass : \" slider-demo\"\r\n        } text-center ${sliderClass ? sliderClass : \"\"} st-hit`}\r\n    >\r\n      <div className=\"image-flip\">\r\n        <div className=\"mainflip flip-0\">\r\n          <div className=\"frontside\">\r\n            <Link to={\"/astrologerdetail/\" + data._id}>\r\n              <div className=\"card\">\r\n                <div className=\"card-body text-center\">\r\n                  <p>\r\n                    <img src={data?.img} alt=\"\" />\r\n                  </p>\r\n                  <h4 className=\"card-title\">{data?.fullname}</h4>\r\n                  <ul className=\"mb-3\">\r\n                    {/* <li>\r\n                      Specility: <span>{data?.all_skills}</span>\r\n                    </li> */}\r\n                    {/* <li>\r\n                      Language: <span>{data?.language}</span>\r\n                    </li> */}\r\n                    <li>\r\n                      Experience: <span>{data?.exp_in_years}</span>\r\n                    </li>\r\n                    <li>\r\n                      Call Rate:{\" \"}\r\n                      <span>\r\n                        {data?.callCharge}/{data?.conrubute_hrs}\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                  <Link className=\"btn btn-primary btn-sm st-d\">\r\n                    {data?.status}\r\n                  </Link>\r\n                  <Link\r\n                    onClick={() => handleCalltogyta(data)}\r\n                    className=\"btn btn-primary btn-sm\"\r\n                  >\r\n                    <i class=\"fa fa-phone\"></i> Call Now\r\n                    <small>\r\n                      {/* / 20{\" \"}\r\n                                      <i class=\"fa fa-inr\" aria-hidden=\"true\">\r\n                                        {data.conrubute_hrs}\r\n                                      </i>{\" \"}\r\n                                      per Hour */}\r\n                    </small>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSliderDemo.propTypes = {\r\n  data: PropTypes.object,\r\n  sliderClass: PropTypes.string,\r\n};\r\n\r\nexport default SliderDemo;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Swiper from \"react-id-swiper\";\r\n//import testimonialData from \"../../data/testimonial/testimonial-one.json\";\r\n// import TestimonialOneSingle from \"../../components/testimonial/TestimonialOneSingle.js\";\r\nimport textbottom from \"../../assets/img/textbottom.png\";\r\nimport SliderDemo from \"./sliderdemo\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\n\r\nconst SliderList = ({\r\n  spaceTopClass,\r\n  spaceBottomClass,\r\n  spaceLeftClass,\r\n  spaceRightClass,\r\n  bgColorClass,\r\n  sliderdemoClass,\r\n  backgroundImage,\r\n}) => {\r\n  // swiper slider settings\r\n  const settings = {\r\n    slidesPerView: 4,\r\n    loop: true,\r\n    autoplay: {\r\n      delay: 1000,\r\n      disableOnInteraction: false,\r\n    },\r\n    breakpoints: {\r\n      768: {\r\n        slidesPerView: 4,\r\n        direction: \"horizontal\",\r\n        spaceBetween: 15,\r\n      },\r\n      640: {\r\n        slidesPerView: 2,\r\n        direction: \"horizontal\",\r\n        spaceBetween: 15,\r\n      },\r\n      320: {\r\n        slidesPerView: 2,\r\n        direction: \"horizontal\",\r\n        spaceBetween: 15,\r\n      },\r\n    },\r\n\r\n    navigation: {\r\n      nextEl: \".swiper-button-next\",\r\n      prevEl: \".swiper-button-prev\",\r\n    },\r\n    renderPrevButton: () => (\r\n      <button className=\"swiper-button-prev ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-left\" />\r\n      </button>\r\n    ),\r\n    renderNextButton: () => (\r\n      <button className=\"swiper-button-next ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-right\" />\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  const [testimonialData, setTestimonialData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axiosConfig\r\n      .get(`/admin/allAstro`)\r\n      .then(response => {\r\n        console.log(response.data.data);\r\n        if (response.data.status === true) {\r\n          setTestimonialData(response.data.data);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={` ${spaceTopClass ? spaceTopClass : \"\"}  ${\r\n        spaceBottomClass ? spaceBottomClass : \"\"\r\n      } ${spaceLeftClass ? spaceLeftClass : \"\"}  ${\r\n        spaceRightClass ? spaceRightClass : \"\"\r\n      } ${bgColorClass ? bgColorClass : \"\"}`}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12  ml-auto mr-auto\">\r\n            <div className=\"heading\">\r\n              <h2>Best Astrologers</h2>\r\n              <img src={textbottom} alt=\"\" />\r\n            </div>\r\n            <div className=\" nav-style-1 nav-testi-style\">\r\n              <Swiper {...settings}>\r\n                {testimonialData &&\r\n                  testimonialData.map((single, key) => {\r\n                    return (\r\n                      <SliderDemo\r\n                        data={single}\r\n                        key={key}\r\n                        sliderClass=\"swiper-slide rtt\"\r\n                        sliderdemoClass={sliderdemoClass}\r\n                      />\r\n                    );\r\n                  })}\r\n              </Swiper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSliderList.propTypes = {\r\n  bgColorClass: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  spaceLeftClass: PropTypes.string,\r\n  spaceRightClass: PropTypes.string,\r\n  spaceTopClass: PropTypes.string,\r\n  testimonialClass: PropTypes.string,\r\n};\r\n\r\nexport default SliderList;\r\n"],"sourceRoot":""}