{"version":3,"sources":["pages/shop/ShopGridTwoColumn.js","wrappers/breadcrumb/Breadcrumb.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopColor.js","components/product/ShopSize.js","components/product/ShopTag.js","components/product/ShopBrand.js","components/product/ShopPrice.js","wrappers/product/ShopSidebar.js"],"names":["i","connect","state","products","productData","location","sliderClassName","product","currency","addToCart","addToWishlist","addToCompare","cartItem","wishlistItem","discountedPrice","compareItem","spaceBottomClass","colorClass","titlePriceClass","useToasts","addToast","useState","layout","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","setCurrentData","setSortedProducts","allcolors","setAllcolors","allsizes","setAllsizes","allbrand","setAllbrand","allcategory","setAllcategory","alltags","setAlltags","pathname","useEffect","sortedProducts","getSortedProducts","filterSortedProducts","slice","dress","setDress","allcolor","Axios","get","data","console","log","allsize","getallbrand","getallcategory","getalltags","getproductbytagname","name","getproductbycolor","id","getproductbysize","getproductbybrand","getproductbypricerange","min","max","post","minamt","maxamt","fetch","response","json","getData","content","to","process","headerTop","className","style","backgroundColor","getSortParams","sideSpaceClass","colors","sizes","category","tags","brand","callback","childData","tagcallback","tagname","colorcallback","sizecallback","brandcallback","pricerange","value","getLayout","getFilterSortParams","productCount","length","sortedProductCount","map","key","_id","src","product_img","alt","width","height","product_name","sell_price","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","Breadcrumb","separator","item","NavLink","finalItem","ShopTopAction","ShopTopbar","ShopSearch","action","type","placeholder","ShopCategories","categories","cb","onClick","e","setActiveSort","ShopColor","getonecolor","color","colorName","borderRadius","ShopSize","getonesize","size","sizeName","ShopTag","getonetag","tag","ShopBrand","brands","getonebrand","valuetext","ShopPrice","priceobj","React","setValue","Box","Slider","getAriaLabel","scale","onChange","event","newValue","valueLabelDisplay","getAriaValueText","ShopSidebar","getIndividualCategories","getIndividualColors","getProductsIndividualSizes","getIndividualTags"],"mappings":"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","file":"static/js/107.7148310a.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getSortedProducts } from \"../../helpers/product\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopSidebar from \"../../wrappers/product/ShopSidebar\";\r\nimport ShopTopbar from \"../../wrappers/product/ShopTopbar\";\r\n//import ShopProducts from \"../../wrappers/product/ShopProducts\";\r\n//import ProductModal from \"../../components/product/ProductModal\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Axios from \"axios\";\r\n\r\nconst ShopGridTwoColumn = ({\r\n  location,\r\n  products,\r\n  product,\r\n  currency,\r\n  addToCart,\r\n  addToWishlist,\r\n  addToCompare,\r\n  cartItem,\r\n  wishlistItem,\r\n  discountedPrice,\r\n  compareItem,\r\n  sliderClassName,\r\n  spaceBottomClass,\r\n  colorClass,\r\n  titlePriceClass,\r\n}) => {\r\n  //const [modalShow, setModalShow] = useState(false);\r\n  const { addToast } = useToasts();\r\n  const [layout, setLayout] = useState(\"grid two-column\");\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  const [allcolors, setAllcolors] = useState([]);\r\n  const [allsizes, setAllsizes] = useState([]);\r\n  const [allbrand, setAllbrand] = useState([]);\r\n  const [allcategory, setAllcategory] = useState([]);\r\n  const [alltags, setAlltags] = useState([]);\r\n\r\n  const pageLimit = 16;\r\n  const { pathname } = location;\r\n\r\n  const getLayout = (layout) => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  const [dress, setDress] = useState([]);\r\n\r\n  const allcolor = async () => {\r\n    const { data } = await Axios.get(`http://13.235.180.192/api/admin/getcolor`);\r\n    //const address = data.data;\r\n    console.log(data.data);\r\n    setAllcolors(data.data);\r\n    // console.log(address);\r\n    // setUseraddress(address)\r\n  };\r\n  const allsize = async () => {\r\n    const { data } = await Axios.get(`http://13.235.180.192/api/admin/getsize`);\r\n    console.log(data.data);\r\n    setAllsizes(data.data);\r\n  };\r\n  const getallbrand = async () => {\r\n    const { data } = await Axios.get(`http://13.235.180.192/api/admin/allbrand`);\r\n    console.log(data.data);\r\n    setAllbrand(data.data);\r\n  };\r\n  const getallcategory = async () => {\r\n    const { data } = await Axios.get(\r\n      `http://13.235.180.192/api/admin/getproductCategory`\r\n    );\r\n    //const address = data.data;\r\n    console.log(data.data);\r\n    setAllcategory(data.data);\r\n    // console.log(address);\r\n    // setUseraddress(address)\r\n  };\r\n  const getalltags = async () => {\r\n    const { data } = await Axios.get(\r\n      `http://13.235.180.192/api/admin/getuniquetag`\r\n    );\r\n    //const address = data.data;\r\n    console.log(data.data);\r\n    setAlltags(data.data);\r\n    // console.log(address);\r\n    // setUseraddress(address)\r\n  };\r\n  const getproductbytagname = async (name) => {\r\n    const { data } = await Axios.get(\r\n      `http://13.235.180.192/api/admin/getproductbytagname/${name}`\r\n    );\r\n    console.log(data.data);\r\n    setDress(data.data);\r\n  };\r\n\r\n  const getproductbycolor = async (id) => {\r\n    console.log(id);\r\n    const { data } = await Axios.get(\r\n      `http://13.235.180.192/api/admin/productbycolor/${id}`\r\n    );\r\n    console.log(data.data);\r\n    setDress(data.data);\r\n  };\r\n  const getproductbysize = async (id) => {\r\n    console.log(id);\r\n    const { data } = await Axios.get(\r\n      `http://13.235.180.192/api/admin/productbysize/${id}`\r\n    );\r\n    console.log(data.data);\r\n    setDress(data.data);\r\n  };\r\n  const getproductbybrand = async (id) => {\r\n    console.log(id);\r\n    const { data } = await Axios.get(\r\n      `http://13.235.180.192/api/admin/productbybrand/${id}`\r\n    );\r\n    console.log(data.data);\r\n    setDress(data.data);\r\n  };\r\n  const getproductbypricerange = async (min,max) => {\r\n    console.log(min,max);\r\n    //http://13.235.180.192/api/admin/productbypricerange\r\n    const { data } = await Axios.post(\r\n      `http://13.235.180.192/api/admin/productbypricerange`,{\r\n        minamt:min,\r\n        maxamt:max\r\n      }\r\n    );\r\n    console.log(data.data);\r\n    setDress(data.data);\r\n  };\r\n\r\n  const callbackfucntin = childData => {\r\n    // callback(childData)\r\n    console.log(childData);;\r\n  };\r\n  const tagcallbackfunction = tagname => {\r\n    // callback(childData)\r\n    console.log(tagname);\r\n    getproductbytagname(tagname)\r\n  };\r\n  const getproductrangeval = value => {\r\n    // callback(childData)\r\n    console.log(value);\r\n    \r\n    getproductbypricerange(value.min,value.max)//getproductbyvalue(tagname)\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const response = await fetch(\"http://13.235.180.192/api/admin/getproduct\");\r\n\r\n      const data = await response.json();\r\n\r\n      setDress(data.data);\r\n      console.log(data.data);\r\n    }\r\n    getData();\r\n    allcolor();\r\n    allsize();\r\n    getallcategory();\r\n    getalltags();\r\n    getallbrand();\r\n    //getproductbytagname(\"Men\");\r\n    return;\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Flone | Shop Page</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Shop\r\n      </BreadcrumbsItem>\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"col-lg-3 pt-2\"\r\n                style={{ backgroundColor: \"#E5E8E8\" }}\r\n              >\r\n                <ShopSidebar\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                  sideSpaceClass=\"mr-30\"\r\n                  colors={allcolors}\r\n                  sizes={allsizes}\r\n                  category={allcategory}\r\n                  tags={alltags}\r\n                  brand={allbrand}\r\n                  callback={callbackfucntin}\r\n                  tagcallback={tagcallbackfunction}\r\n                  colorcallback={getproductbycolor}\r\n                  sizecallback={getproductbysize}\r\n                  brandcallback={getproductbybrand}\r\n                  pricerange={getproductrangeval}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-9\">\r\n                {/* shop topbar default */}\r\n                <ShopTopbar\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={dress.length}\r\n                  sortedProductCount={dress.length}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                {/* <ShopProducts layout={layout} products={currentData} /> */}\r\n                <div className=\"shop-bottom-area mt-35\">\r\n                  <div className={`row ${layout ? layout : \"\"}`}>\r\n                    {/* <ProductGridTwo\r\n                      products={products}\r\n                      spaceBottomClass=\"mb-25\"\r\n                    /> */}\r\n                    <Fragment>\r\n                      {dress.map((product) => (\r\n                        <div\r\n                          className={`col-xl-3 col-md-6 col-lg-4 col-sm-6 ${\r\n                            sliderClassName ? sliderClassName : \"\"\r\n                          }`}\r\n                          key={product._id}\r\n                        >\r\n                          <div\r\n                            className={`product-wrap-2 ${\r\n                              spaceBottomClass ? spaceBottomClass : \"\"\r\n                            } ${colorClass ? colorClass : \"\"} `}\r\n                          >\r\n                            <div className=\"product-img\">\r\n                              <Link\r\n                                to={\r\n                                  process.env.PUBLIC_URL +\r\n                                  \"/product-sticky/\" +\r\n                                  product._id\r\n                                }\r\n                              >\r\n                                <img\r\n                                  className=\"default-img\"\r\n                                  src={product.product_img[0]}\r\n                                  alt=\"\"\r\n                                  style={{ width: \"200px\", height: \"250px\" }}\r\n                                />\r\n\r\n                                <img\r\n                                  className=\"hover-img\"\r\n                                  src={product.product_img[1]}\r\n                                  alt=\"\"\r\n                                  style={{ width: \"200px\", height: \"250px\" }}\r\n                                />\r\n                              </Link>\r\n                              {/* {product.discount || product.new ? (\r\n                <div className=\"product-img-badges\">\r\n                  {product.discount ? (\r\n                    <span className=\"pink\">-{product.discount}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {product.new ? <span className=\"purple\">New</span> : \"\"}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )} */}\r\n\r\n                              <div className=\"product-action-2\">\r\n                                {/* {product.affiliateLink ? (\r\n                                  <a\r\n                                    href={product.affiliateLink}\r\n                                    rel=\"noopener noreferrer\"\r\n                                    target=\"_blank\"\r\n                                    title=\"Buy now\"\r\n                                  >\r\n                                    {\" \"}\r\n                                    <i className=\"fa fa-shopping-cart\"></i>{\" \"}\r\n                                  </a>\r\n                                ) : product.variation &&\r\n                                  product.variation.length >= 1 ? (\r\n                                  <Link\r\n                                    to={`${process.env.PUBLIC_URL}/product/${product.id}`}\r\n                                    title=\"Select options\"\r\n                                  >\r\n                                    <i className=\"fa fa-cog\"></i>\r\n                                  </Link>\r\n                                ) : product.stock && product.stock > 0 ? (\r\n                                  <button\r\n                                    onClick={() => addToCart(product, addToast)}\r\n                                    className={\r\n                                      cartItem !== undefined &&\r\n                                      cartItem.quantity > 0\r\n                                        ? \"active\"\r\n                                        : \"\"\r\n                                    }\r\n                                    disabled={\r\n                                      cartItem !== undefined &&\r\n                                      cartItem.quantity > 0\r\n                                    }\r\n                                    title={\r\n                                      cartItem !== undefined\r\n                                        ? \"Added to cart\"\r\n                                        : \"Add to cart\"\r\n                                    }\r\n                                  >\r\n                                    {\" \"}\r\n                                    <i className=\"fa fa-shopping-cart\"></i>{\" \"}\r\n                                  </button>\r\n                                ) : (\r\n                                  <button\r\n                                    disabled\r\n                                    className=\"active\"\r\n                                    title=\"Out of stock\"\r\n                                  >\r\n                                    <i className=\"fa fa-shopping-cart\"></i>\r\n                                  </button>\r\n                                )} */}\r\n                                {/* \r\n                                <button\r\n                                  onClick={() => setModalShow(true)}\r\n                                  title=\"Quick View\"\r\n                                >\r\n                                  <i className=\"fa fa-eye\"></i>\r\n                                </button> */}\r\n\r\n                                {/* <button\r\n                                  className={\r\n                                    compareItem !== undefined ? \"active\" : \"\"\r\n                                  }\r\n                                  disabled={compareItem !== undefined}\r\n                                  title={\r\n                                    compareItem !== undefined\r\n                                      ? \"Added to compare\"\r\n                                      : \"Add to compare\"\r\n                                  }\r\n                                  onClick={() =>\r\n                                    addToCompare(product, addToast)\r\n                                  }\r\n                                >\r\n                                  <i className=\"fa fa-retweet\"></i>\r\n                                </button> */}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"product-content-2\">\r\n                              <div\r\n                                className={`title-price-wrap-2 ${\r\n                                  titlePriceClass ? titlePriceClass : \"\"\r\n                                }`}\r\n                              >\r\n                                <h3>\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product/\" +\r\n                                      product._id\r\n                                    }\r\n                                  >\r\n                                    {product.product_name}\r\n                                  </Link>\r\n                                </h3>\r\n                                <div className=\"price-2\">\r\n                                  <Fragment>\r\n                                    <span>₹ {product.sell_price}</span>\r\n                                  </Fragment>\r\n                                </div>\r\n                              </div>\r\n                              {/* <div className=\"pro-wishlist-2\">\r\n                                <button\r\n                                  className={\r\n                                    wishlistItem !== undefined ? \"active\" : \"\"\r\n                                  }\r\n                                  disabled={wishlistItem !== undefined}\r\n                                  title={\r\n                                    wishlistItem !== undefined\r\n                                      ? \"Added to wishlist\"\r\n                                      : \"Add to wishlist\"\r\n                                  }\r\n                                  onClick={() =>\r\n                                    addToWishlist(product, addToast)\r\n                                  }\r\n                                >\r\n                                  <i className=\"fa fa-heart-o\" />\r\n                                </button>\r\n                              </div> */}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n\r\n                      {/* product modal */}\r\n                      {/* <ProductModal\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                        product={product}\r\n                        currency={currency}\r\n                        discountedprice={discountedPrice}\r\n                        cartitem={cartItem}\r\n                        wishlistitem={wishlistItem}\r\n                        compareitem={compareItem}\r\n                        addtocart={addToCart}\r\n                        addtowishlist={addToWishlist}\r\n                        addtocompare={addToCompare}\r\n                        addtoast={addToast}\r\n                      /> */}\r\n                    </Fragment>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={dress.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopGridTwoColumn.propTypes = {\r\n  location: PropTypes.object,\r\n  products: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.productData.products,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShopGridTwoColumn);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\n\r\nconst ShopTopAction = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        {/* <div className=\"shop-select\">\r\n          <select\r\n            onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">Default</option>\r\n            <option value=\"priceHighToLow\">Price - High to Low</option>\r\n            <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n          </select>\r\n        </div> */}\r\n        <p>\r\n          Showing {sortedProductCount} of {productCount} result\r\n        </p>\r\n      </div>\r\n\r\n      {/* <div className=\"shop-tab\">\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid three-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopAction\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        sortedProductCount={sortedProductCount}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n","import React from \"react\";\r\n\r\nconst ShopSearch = () => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Search </h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <form className=\"pro-sidebar-search-form\" action=\"#\">\r\n          <input type=\"text\" placeholder=\"Search here...\" />\r\n          <button>\r\n            <i className=\"pe-7s-search\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSearch;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getSortParams,cb }) => {\r\n\r\n  // const [selectedcategory, setSelectedcategory] = useState('')\r\n  // const sendData = () => {\r\n  //   cb(selectedcategory);\r\n  // };\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\r\n      <div className=\"sidebar-widget-list mt-30\">\r\n        {categories ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"category\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Categories\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        console.log(category._id);\r\n                        cb(category._id)\r\n                        getSortParams(\"category\", category);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category.name}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No categories found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopCategories;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\nconst dot = {\r\n    height: \"25px\",\r\n    width: \"25px\",\r\n    borderRadius: \"50%\",\r\n    display: \"inline-block\",\r\n  \r\n}\r\n\r\nconst ShopColor = ({ colors, getSortParams,getonecolor }) => {\r\n  \r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Color </h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {colors ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"color\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Colors{\" \"}\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {colors.map((color, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        getonecolor(color._id)\r\n                        console.log(color._id)\r\n                        getSortParams(\"color\", color);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      <span className=\"checkmark\" /><span style={{backgroundColor: color?.colorName,borderRadius: \"50%\",height: 25,\r\n    width: 25}}></span> {color?.colorName}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No colors found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopColor.propTypes = {\r\n  colors: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopColor;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopSize = ({ sizes, getSortParams,getonesize }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-40\">\r\n      <h4 className=\"pro-sidebar-title\">Size </h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {sizes ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"size\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Sizes{\" \"}\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {sizes.map((size, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      className=\"text-uppercase\"\r\n                      onClick={e => {\r\n                        console.log(size._id);\r\n                        getonesize(size._id);\r\n                        getSortParams(\"size\", size);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" />\r\n                      {size.sizeName}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No sizes found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopSize.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  sizes: PropTypes.array\r\n};\r\n\r\nexport default ShopSize;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopTag = ({ tags, getSortParams,getonetag }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Tag </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {tags ? (\r\n          <ul>\r\n            {tags.map((tag, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={e => {\r\n                      getonetag(tag)\r\n                      getSortParams(\"tag\", tag);\r\n                      setActiveSort(e);\r\n                    }}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No tags found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTag.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  tags: PropTypes.array\r\n};\r\n\r\nexport default ShopTag;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopBrand = ({ brands, getSortParams,getonebrand }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Brand </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {brands ? (\r\n          <ul>\r\n            {brands.map((brands, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={(e) => {\r\n                      getonebrand(brands._id)\r\n                      getSortParams(\"brands\", brands);\r\n                      setActiveSort(e);\r\n                    }}\r\n                  >\r\n                    {brands.name}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No brands found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopBrand.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  brands: PropTypes.array,\r\n};\r\n\r\nexport default ShopBrand;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nfunction valuetext(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\n\r\n\r\n// const ShopPrice=({ tags, getSortParams,getonetag })=> {\r\n//   const [value, setValue] = React.useState([20, 37]);\r\n\r\n//   const handleChange = (event, newValue) => {\r\n//     setValue(newValue);\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ width: 300 }}>\r\n//       <Slider\r\n//         getAriaLabel={() => 'Temperature range'}\r\n//         value={value}\r\n//         onChange={handleChange}\r\n//         valueLabelDisplay=\"auto\"\r\n//         getAriaValueText={valuetext}\r\n//       />\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n\r\nconst ShopPrice = ({ tags, getSortParams,priceobj }) => {\r\n  const [value, setValue] = React.useState([1, 90]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    // console.log(newValue[0]*100)\r\n    priceobj({min:newValue[0]*25,max:newValue[1]*25})\r\n    // getminvalue(newValue[0]*100)\r\n    // console.log(newValue[1]*100)\r\n    // getmaxvalue(newValue[1]*100)\r\n  };\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Price Range </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n      <Box >\r\n      <Slider\r\n        getAriaLabel={() => 'Price range'}\r\n        value={value}\r\n        scale={(i) => 25*i }\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        getAriaValueText={valuetext}\r\n      />\r\n    </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopPrice.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  price: PropTypes.array\r\n};\r\n\r\nexport default ShopPrice;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes,\r\n} from \"../../helpers/product\";\r\nimport ShopSearch from \"../../components/product/ShopSearch\";\r\nimport ShopCategories from \"../../components/product/ShopCategories\";\r\nimport ShopColor from \"../../components/product/ShopColor\";\r\nimport ShopSize from \"../../components/product/ShopSize\";\r\nimport ShopTag from \"../../components/product/ShopTag\";\r\nimport ShopBrand from \"../../components/product/ShopBrand\";\r\nimport ShopPrice from \"../../components/product/ShopPrice\";\r\n\r\nconst ShopSidebar = ({\r\n  products,\r\n  getSortParams,\r\n  sideSpaceClass,\r\n  colors,\r\n  sizes,\r\n  category,\r\n  tags,\r\n  brand,\r\n  callback,\r\n  tagcallback,\r\n  colorcallback,\r\n  sizecallback,\r\n  brandcallback,\r\n  pricerange\r\n}) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  const uniqueSizes = getProductsIndividualSizes(products);\r\n  const uniqueTags = getIndividualTags(products);\r\n  // const dataid = getIndividualTags(products);\r\n  const callbackFunction = childData => {\r\n    callback(childData)\r\n    console.log(childData);;\r\n  };\r\n\r\n  const tagcallbackMiddle = data => {\r\n    tagcallback(data)\r\n    console.log(data);;\r\n  };\r\n  const colorcallbackMiddle = id => {\r\n    colorcallback(id)\r\n    console.log(id);;\r\n  };\r\n  const sizecallbackMiddle = id => {\r\n    sizecallback(id)\r\n    console.log(id);;\r\n  };\r\n  const brandcallbackMiddle = id => {\r\n    brandcallback(id)\r\n    console.log(id);;\r\n  };\r\n  // const minratecallbackMiddle = value => {\r\n  //   minratecallback(value)\r\n  //   console.log(value);;\r\n  // };\r\n  // const maxratecallbackMiddle = value => {\r\n  //   maxratecallback(value)\r\n  //   console.log(value);;\r\n  // };\r\n  const pricerangecallbackmiddle = value => {\r\n    // maxratecallback(value)\r\n    pricerange(value)\r\n    console.log(value);;\r\n  };\r\n  // const tag = fromchildtohere()\r\n\r\n  return (\r\n    <div className={`sidebar-style ${sideSpaceClass ? sideSpaceClass : \"\"}`}>\r\n      {/* shop search */}\r\n      <ShopSearch />\r\n\r\n      {/* filter by price range */}\r\n    <ShopPrice tags={tags} getSortParams={getSortParams} priceobj={pricerangecallbackmiddle} />\r\n\r\n    {/* filter by tag */}\r\n    <ShopTag tags={tags} getSortParams={getSortParams} getonetag={tagcallbackMiddle} />\r\n\r\n      \r\n\r\n      {/* filter by color */}\r\n      <ShopColor colors={colors} getSortParams={getSortParams} getonecolor={colorcallbackMiddle}/>\r\n\r\n      {/* filter by size */}\r\n      <ShopSize sizes={sizes} getSortParams={getSortParams} getonesize={sizecallbackMiddle}/>\r\n\r\n      \r\n      <ShopBrand brands={brand} getSortParams={getSortParams} getonebrand={brandcallbackMiddle}/>\r\n\r\n      {/* filter by categories */}\r\n      <ShopCategories categories={category} getSortParams={getSortParams} cb={callbackFunction} />\r\n    </div>\r\n  );\r\n};\r\n\r\nShopSidebar.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array,\r\n  sideSpaceClass: PropTypes.string,\r\n};\r\n\r\nexport default ShopSidebar;\r\n"],"sourceRoot":""}