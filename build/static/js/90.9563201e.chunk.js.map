{"version":3,"sources":["components/astrology/astromallList.js","assets/img/astrologin-bg.jpg","../node_modules/reactstrap/es/Col.js","../node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","components/astrology/autosearch.js"],"names":["AstromallList","componentDidMount","axiosConfig","get","then","response","console","log","data","status","setState","procategory","catch","error","state","this","headerTop","className","style","float","width","backgroundColor","position","backgroundAttachment","backgroundSize","color","padding","backgroundImage","astrologinbg","backgroundPosition","backgroundRepeat","textAlign","md","lg","length","map","procat","index","key","to","_id","src","img","alt","name","ReactHtmlParser","desc","React","Component","module","exports","_excluded","stringOrNumberProp","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","xs","sm","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","props","Tag","attributes","colClasses","forEach","i","columnProp","_classNames","colSizeInterfix","colClass","push","_colClass","classes","createElement","fn","cache","Object","create","arg","undefined","AutoSearch","items","id","onSearch","results","onHover","result","onSelect","item","onFocus","autoFocus","formatResult","display"],"mappings":"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","file":"static/js/90.9563201e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport AutoSearch from \"./autosearch\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport astrologinbg from \"../../assets/img/astrologin-bg.jpg\";\r\nclass AstromallList extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      procategory: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    axiosConfig\r\n      .get(\"/admin/getproductcalegory\")\r\n      .then(response => {\r\n        console.log(response.data);\r\n        if (response.data.status === true) {\r\n          this.setState({ procategory: response.data.data });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        console.log(error.response);\r\n      });\r\n  };\r\n  render() {\r\n    const { procategory } = this.state;\r\n    return (\r\n      <LayoutOne headerTop=\"visible\">\r\n        <section className=\"pt-0 pb-0\">\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              // backgroundColor: \"#ffcc01\",\r\n              // width: \"100%\",\r\n              // padding: \"70px 0px\",\r\n              // backgroundSize: \"cover\",\r\n              float: \"left\",\r\n              width: \"100%\",\r\n              backgroundColor: \"#272727\",\r\n              position: \"relative\",\r\n              backgroundAttachment: \"fixed\",\r\n              backgroundSize: \"cover\",\r\n              color: \"#ffffff\",\r\n              padding: \" 50px 0px 50px 0px\",\r\n              backgroundImage: `url(${astrologinbg})`,\r\n              backgroundPosition: \"center center\",\r\n              backgroundRepeat: \" no-repeat\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Container>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <div className=\"leftcont text-left\">\r\n                    <h1>Astromall Shop</h1>\r\n                    <h3>Shop Best Online Astrology Products And Services</h3>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"ptb-0\">\r\n          <Container>\r\n            <Row>\r\n              <Col lg=\"12\">\r\n                <div className=\"pt-10 pb-50\">\r\n                  <AutoSearch />\r\n                  <Row>\r\n                    {procategory.length\r\n                      ? procategory.map((procat, index) => {\r\n                          return (\r\n                            <Col key={index} md=\"3\">\r\n                              <div className=\"po-box\">\r\n                                <Link to={\"/productlist/\" + procat._id}>\r\n                                  <Row>\r\n                                    <Col md=\"12\">\r\n                                      <div className=\"po-1 text-center\">\r\n                                        <img\r\n                                          src={procat.img}\r\n                                          alt=\"\"\r\n                                          width=\"50%\"\r\n                                        />\r\n                                      </div>\r\n                                    </Col>\r\n                                    <Col md=\"12\">\r\n                                      <div className=\"po-1 text-center\">\r\n                                        <h3>{procat.name}</h3>\r\n                                        <p>{ReactHtmlParser(procat.desc)}</p>\r\n                                      </div>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Link>\r\n                              </div>\r\n                            </Col>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </Row>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"6\"></Col>\r\n            </Row>\r\n          </Container>\r\n        </section>\r\n      </LayoutOne>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AstromallList;\r\n","module.exports = __webpack_public_path__ + \"static/media/astrologin-bg.f858568c.jpg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\nvar Col = function Col(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    widths = props.widths,\n    Tag = props.tag,\n    attributes = _objectWithoutPropertiesLoose(props, _excluded);\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n    var isXs = !i;\n    if (isObject(columnProp)) {\n      var _classNames;\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(_colClass);\n    }\n  });\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\nexport default memoize;","import React from 'react'\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\r\n\r\nfunction AutoSearch() {\r\n  // note: the id field is mandatory\r\n  const items = [\r\n    {\r\n      id: 0,\r\n      name: 'Cobol',\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'JavaScript',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Basic',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'PHP',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Java',\r\n    },\r\n  ]\r\n\r\n  const handleOnSearch = (string, results) => {\r\n    // onSearch will have as the first callback parameter\r\n    // the string searched and for the second the results.\r\n    console.log(string, results)\r\n  }\r\n\r\n  const handleOnHover = (result) => {\r\n    // the item hovered\r\n    console.log(result)\r\n  }\r\n\r\n  const handleOnSelect = (item) => {\r\n    // the item selected\r\n    console.log(item)\r\n  }\r\n\r\n  const handleOnFocus = () => {\r\n    console.log('Focused')\r\n  }\r\n\r\n  const formatResult = (item) => {\r\n    return (\r\n      <>\r\n        <span style={{ display: 'block', textAlign: 'left' }}>\r\n          id: {item.id}\r\n        </span>\r\n        <span style={{ display: 'block', textAlign: 'left' }}>\r\n          name: {item.name}\r\n        </span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"st-search\">\r\n          <ReactSearchAutocomplete\r\n            items={items}\r\n            onSearch={handleOnSearch}\r\n            onHover={handleOnHover}\r\n            onSelect={handleOnSelect}\r\n            onFocus={handleOnFocus}\r\n            autoFocus\r\n            formatResult={formatResult}\r\n          />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AutoSearch\r\n"],"sourceRoot":""}