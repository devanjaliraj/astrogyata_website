{"version":3,"sources":["../node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","components/astrology/autosearch.js"],"names":["fn","cache","Object","create","arg","undefined","AutoSearch","className","items","id","name","onSearch","string","results","console","log","onHover","result","onSelect","item","onFocus","autoFocus","formatResult","style","display","textAlign"],"mappings":"oHAOe,IAPf,SAAiBA,GACf,IAAIC,EAAQC,OAAOC,OAAO,MAC1B,OAAO,SAAUC,GAEf,YADmBC,IAAfJ,EAAMG,KAAoBH,EAAMG,GAAOJ,EAAGI,IACvCH,EAAMG,M,iCCJjB,oCAgFeE,UA7Ef,WA0DE,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKA,UAAU,aACb,kBAAC,0BAAuB,CACtBC,MA7DI,CACZ,CACEC,GAAI,EACJC,KAAM,SAER,CACED,GAAI,EACJC,KAAM,cAER,CACED,GAAI,EACJC,KAAM,SAER,CACED,GAAI,EACJC,KAAM,OAER,CACED,GAAI,EACJC,KAAM,SA2CAC,SAvCa,SAACC,EAAQC,GAG9BC,QAAQC,IAAIH,EAAQC,IAqCZG,QAlCY,SAACC,GAErBH,QAAQC,IAAIE,IAiCJC,SA9Ba,SAACC,GAEtBL,QAAQC,IAAII,IA6BJC,QA1BY,WACpBN,QAAQC,IAAI,YA0BJM,WAAS,EACTC,aAxBW,SAACH,GACpB,OACE,oCACE,0BAAMI,MAAO,CAAEC,QAAS,QAASC,UAAW,SAAS,OAC9CN,EAAKV,IAEZ,0BAAMc,MAAO,CAAEC,QAAS,QAASC,UAAW,SAAS,SAC5CN,EAAKT","file":"static/js/141.48705878.chunk.js","sourcesContent":["function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\nexport default memoize;","import React from 'react'\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\r\n\r\nfunction AutoSearch() {\r\n  // note: the id field is mandatory\r\n  const items = [\r\n    {\r\n      id: 0,\r\n      name: 'Cobol',\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'JavaScript',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Basic',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'PHP',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Java',\r\n    },\r\n  ]\r\n\r\n  const handleOnSearch = (string, results) => {\r\n    // onSearch will have as the first callback parameter\r\n    // the string searched and for the second the results.\r\n    console.log(string, results)\r\n  }\r\n\r\n  const handleOnHover = (result) => {\r\n    // the item hovered\r\n    console.log(result)\r\n  }\r\n\r\n  const handleOnSelect = (item) => {\r\n    // the item selected\r\n    console.log(item)\r\n  }\r\n\r\n  const handleOnFocus = () => {\r\n    console.log('Focused')\r\n  }\r\n\r\n  const formatResult = (item) => {\r\n    return (\r\n      <>\r\n        <span style={{ display: 'block', textAlign: 'left' }}>\r\n          id: {item.id}\r\n        </span>\r\n        <span style={{ display: 'block', textAlign: 'left' }}>\r\n          name: {item.name}\r\n        </span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"st-search\">\r\n          <ReactSearchAutocomplete\r\n            items={items}\r\n            onSearch={handleOnSearch}\r\n            onHover={handleOnHover}\r\n            onSelect={handleOnSelect}\r\n            onFocus={handleOnFocus}\r\n            autoFocus\r\n            formatResult={formatResult}\r\n          />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AutoSearch\r\n"],"sourceRoot":""}