{"version":3,"sources":["components/astrology/astromallList.js","assets/img/astrologin-bg.jpg","../node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","components/astrology/autosearch.js"],"names":["AstromallList","componentDidMount","axiosConfig","get","then","response","console","log","data","status","setState","procategory","catch","error","state","this","headerTop","className","style","float","width","backgroundColor","position","backgroundAttachment","backgroundSize","color","padding","backgroundImage","astrologinbg","backgroundPosition","backgroundRepeat","textAlign","md","lg","length","map","procat","index","key","to","_id","src","img","alt","name","ReactHtmlParser","desc","React","Component","module","exports","fn","cache","Object","create","arg","undefined","AutoSearch","items","id","onSearch","string","results","onHover","result","onSelect","item","onFocus","autoFocus","formatResult","display"],"mappings":"yRAQMA,EAAa,kDACjB,aAAe,IAAD,EAIV,OAJU,qBACZ,gBAMFC,kBAAoB,WAClBC,IACGC,IAAI,6BACJC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASG,OACQ,IAAzBH,EAASG,KAAKC,QAChB,EAAKC,SAAS,CAAEC,YAAaN,EAASG,KAAKA,UAG9CI,OAAM,SAAAC,GACLP,QAAQC,IAAIM,GACZP,QAAQC,IAAIM,EAAMR,cAhBtB,EAAKS,MAAQ,CACXH,YAAa,IACb,EAqGH,OApGA,mCAgBD,WACE,IAAQA,EAAgBI,KAAKD,MAArBH,YACR,OACE,kBAAC,IAAS,CAACK,UAAU,WACnB,6BAASC,UAAU,aACjB,yBACEA,UAAU,GACVC,MAAO,CAKLC,MAAO,OACPC,MAAO,OACPC,gBAAiB,UACjBC,SAAU,WACVC,qBAAsB,QACtBC,eAAgB,QAChBC,MAAO,UACPC,QAAS,qBACTC,gBAAgB,OAAD,OAASC,IAAY,KACpCC,mBAAoB,gBACpBC,iBAAkB,aAClBC,UAAW,WAGb,kBAAC,IAAS,KACR,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACC,GAAG,MACN,yBAAKf,UAAU,sBACb,8CACA,sFAQZ,6BAASA,UAAU,SACjB,kBAAC,IAAS,KACR,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACgB,GAAG,MACN,yBAAKhB,UAAU,eACb,kBAAC,UAAU,MACX,kBAAC,IAAG,KACDN,EAAYuB,OACTvB,EAAYwB,KAAI,SAACC,EAAQC,GACvB,OACE,kBAAC,IAAG,CAACC,IAAKD,EAAOL,GAAG,KAClB,yBAAKf,UAAU,UACb,kBAAC,IAAI,CAACsB,GAAI,gBAAkBH,EAAOI,KACjC,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACR,GAAG,MACN,yBAAKf,UAAU,oBACb,yBACEwB,IAAKL,EAAOM,IACZC,IAAI,GACJvB,MAAM,UAIZ,kBAAC,IAAG,CAACY,GAAG,MACN,yBAAKf,UAAU,oBACb,4BAAKmB,EAAOQ,MACZ,2BAAIC,IAAgBT,EAAOU,gBAS3C,QAIV,kBAAC,IAAG,CAACb,GAAG,cAMnB,EA1GgB,CAASc,IAAMC,WA6GnBhD,a,oBCrHfiD,EAAOC,QAAU,IAA0B,2C,iCCO5B,IAPf,SAAiBC,GACf,IAAIC,EAAQC,OAAOC,OAAO,MAC1B,OAAO,SAAUC,GAEf,YADmBC,IAAfJ,EAAMG,KAAoBH,EAAMG,GAAOJ,EAAGI,IACvCH,EAAMG,M,iCCJjB,oCAgFeE,UA7Ef,WA0DE,OACE,yBAAKxC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKA,UAAU,aACb,kBAAC,0BAAuB,CACtByC,MA7DI,CACZ,CACEC,GAAI,EACJf,KAAM,SAER,CACEe,GAAI,EACJf,KAAM,cAER,CACEe,GAAI,EACJf,KAAM,SAER,CACEe,GAAI,EACJf,KAAM,OAER,CACEe,GAAI,EACJf,KAAM,SA2CAgB,SAvCa,SAACC,EAAQC,GAG9BxD,QAAQC,IAAIsD,EAAQC,IAqCZC,QAlCY,SAACC,GAErB1D,QAAQC,IAAIyD,IAiCJC,SA9Ba,SAACC,GAEtB5D,QAAQC,IAAI2D,IA6BJC,QA1BY,WACpB7D,QAAQC,IAAI,YA0BJ6D,WAAS,EACTC,aAxBW,SAACH,GACpB,OACE,oCACE,0BAAMhD,MAAO,CAAEoD,QAAS,QAASvC,UAAW,SAAS,OAC9CmC,EAAKP,IAEZ,0BAAMzC,MAAO,CAAEoD,QAAS,QAASvC,UAAW,SAAS,SAC5CmC,EAAKtB,e","file":"static/js/100.35e3e958.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport AutoSearch from \"./autosearch\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport astrologinbg from \"../../assets/img/astrologin-bg.jpg\";\r\nclass AstromallList extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      procategory: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    axiosConfig\r\n      .get(\"/admin/getproductcalegory\")\r\n      .then(response => {\r\n        console.log(response.data);\r\n        if (response.data.status === true) {\r\n          this.setState({ procategory: response.data.data });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        console.log(error.response);\r\n      });\r\n  };\r\n  render() {\r\n    const { procategory } = this.state;\r\n    return (\r\n      <LayoutOne headerTop=\"visible\">\r\n        <section className=\"pt-0 pb-0\">\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              // backgroundColor: \"#ffcc01\",\r\n              // width: \"100%\",\r\n              // padding: \"70px 0px\",\r\n              // backgroundSize: \"cover\",\r\n              float: \"left\",\r\n              width: \"100%\",\r\n              backgroundColor: \"#272727\",\r\n              position: \"relative\",\r\n              backgroundAttachment: \"fixed\",\r\n              backgroundSize: \"cover\",\r\n              color: \"#ffffff\",\r\n              padding: \" 50px 0px 50px 0px\",\r\n              backgroundImage: `url(${astrologinbg})`,\r\n              backgroundPosition: \"center center\",\r\n              backgroundRepeat: \" no-repeat\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Container>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <div className=\"leftcont text-left\">\r\n                    <h1>Astromall Shop</h1>\r\n                    <h3>Shop Best Online Astrology Products And Services</h3>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"ptb-0\">\r\n          <Container>\r\n            <Row>\r\n              <Col lg=\"12\">\r\n                <div className=\"pt-10 pb-50\">\r\n                  <AutoSearch />\r\n                  <Row>\r\n                    {procategory.length\r\n                      ? procategory.map((procat, index) => {\r\n                          return (\r\n                            <Col key={index} md=\"3\">\r\n                              <div className=\"po-box\">\r\n                                <Link to={\"/productlist/\" + procat._id}>\r\n                                  <Row>\r\n                                    <Col md=\"12\">\r\n                                      <div className=\"po-1 text-center\">\r\n                                        <img\r\n                                          src={procat.img}\r\n                                          alt=\"\"\r\n                                          width=\"50%\"\r\n                                        />\r\n                                      </div>\r\n                                    </Col>\r\n                                    <Col md=\"12\">\r\n                                      <div className=\"po-1 text-center\">\r\n                                        <h3>{procat.name}</h3>\r\n                                        <p>{ReactHtmlParser(procat.desc)}</p>\r\n                                      </div>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Link>\r\n                              </div>\r\n                            </Col>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </Row>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"6\"></Col>\r\n            </Row>\r\n          </Container>\r\n        </section>\r\n      </LayoutOne>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AstromallList;\r\n","module.exports = __webpack_public_path__ + \"static/media/astrologin-bg.f858568c.jpg\";","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\nexport default memoize;","import React from 'react'\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\r\n\r\nfunction AutoSearch() {\r\n  // note: the id field is mandatory\r\n  const items = [\r\n    {\r\n      id: 0,\r\n      name: 'Cobol',\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'JavaScript',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Basic',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'PHP',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Java',\r\n    },\r\n  ]\r\n\r\n  const handleOnSearch = (string, results) => {\r\n    // onSearch will have as the first callback parameter\r\n    // the string searched and for the second the results.\r\n    console.log(string, results)\r\n  }\r\n\r\n  const handleOnHover = (result) => {\r\n    // the item hovered\r\n    console.log(result)\r\n  }\r\n\r\n  const handleOnSelect = (item) => {\r\n    // the item selected\r\n    console.log(item)\r\n  }\r\n\r\n  const handleOnFocus = () => {\r\n    console.log('Focused')\r\n  }\r\n\r\n  const formatResult = (item) => {\r\n    return (\r\n      <>\r\n        <span style={{ display: 'block', textAlign: 'left' }}>\r\n          id: {item.id}\r\n        </span>\r\n        <span style={{ display: 'block', textAlign: 'left' }}>\r\n          name: {item.name}\r\n        </span>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"st-search\">\r\n          <ReactSearchAutocomplete\r\n            items={items}\r\n            onSearch={handleOnSearch}\r\n            onHover={handleOnHover}\r\n            onSelect={handleOnSelect}\r\n            onFocus={handleOnFocus}\r\n            autoFocus\r\n            formatResult={formatResult}\r\n          />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AutoSearch\r\n"],"sourceRoot":""}