{"version":3,"sources":["pages/shop/ShopGridNoSidebar.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js"],"names":["connect","state","products","productData","location","useState","layout","setLayout","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","pathname","useEffect","getSortedProducts","filterSortedProducts","slice","name","content","to","process","headerTop","className","getLayout","getFilterSortParams","sortType","sortValue","productCount","length","sortedProductCount","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","ShopTopAction","ShopTopbar"],"mappings":"iPAmHeA,6BANS,SAAAC,GACtB,MAAO,CACLC,SAAUD,EAAME,YAAYD,YAIjBF,EAvGW,SAAH,GAAgC,IAA1BI,EAAQ,EAARA,SAAUF,EAAQ,EAARA,SACrC,EAA4BG,mBAAS,qBAAoB,mBAAlDC,EAAM,KAAEC,EAAS,KAGxB,EAA4CF,mBAAS,IAAG,mBAAjDG,EAAc,KAAEC,EAAiB,KACxC,EAA8CJ,mBAAS,IAAG,mBAAnDK,EAAe,KAAEC,EAAkB,KAC1C,EAA4BN,mBAAS,GAAE,mBAAhCO,EAAM,KAAEC,EAAS,KACxB,EAAsCR,mBAAS,GAAE,mBAA1CS,EAAW,KAAEC,EAAc,KAClC,EAAsCV,mBAAS,IAAG,mBAA3CW,EAAW,KAAEC,EAAc,KAClC,EAA4CZ,mBAAS,IAAG,mBAAjDa,EAAc,KAAEC,EAAiB,KAGhCC,EAAahB,EAAbgB,SAuBR,OAZAC,qBAAU,WACR,IAAIH,EAAiBI,YAAkBpB,EAtBxB,GACC,IAsBVqB,EAAuBD,YAC3BJ,EACAV,EACAE,GAGFS,EADAD,EAAiBK,GAEjBN,EAAeC,EAAeM,MAAMZ,EAAQA,EArB5B,OAsBf,CAACA,EAAQV,EA/BK,GACC,GA8ByBM,EAAgBE,IAGzD,kBAAC,WAAQ,KACP,kBAAC,IAAQ,KACP,oDACA,0BACEe,KAAK,cACLC,QAAQ,6DAIZ,kBAAC,kBAAe,CAACC,GAA6B,KAAI,QAClD,kBAAC,kBAAe,CAACA,GAAIC,GAAyBR,GAAS,QAIvD,kBAAC,IAAS,CAACS,UAAU,WAEnB,kBAAC,IAAU,MAEX,yBAAKC,UAAU,0BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aAEb,kBAAC,IAAU,CACTC,UA9CE,SAAAzB,GAChBC,EAAUD,IA8CI0B,oBA3CY,SAACC,EAAUC,GACrCzB,EAAkBwB,GAClBtB,EAAmBuB,IA0CLC,aAAcjC,EAASkC,OACvBC,mBAAoBrB,EAAYoB,SAIlC,kBAAC,IAAY,CAAC9B,OAAQA,EAAQJ,SAAUc,IAGxC,yBAAKc,UAAU,0CACb,kBAAC,IAAS,CACRQ,aAAcpB,EAAekB,OAC7BG,UA9DA,GA+DAC,eAAgB,EAChB3B,UAAWA,EACXC,YAAaA,EACbC,eAAgBA,EAChB0B,mBAAmB,YACnBC,aAAa,OACbC,aAAa,oB,qDC5BlBC,G,OA5DO,SAAH,GACR,EAATb,UACmB,EAAnBC,oBAGK,IAFLG,EAAY,EAAZA,aACAE,EAAkB,EAAlBA,mBAEA,OACE,yBAAKP,UAAU,sBACb,yBAAKA,UAAU,sBAUb,sCACWO,EAAkB,OAAMF,EAAY,eCOxCU,IA1BI,SAAH,GAKT,IAJLd,EAAS,EAATA,UACAC,EAAmB,EAAnBA,oBACAG,EAAY,EAAZA,aACAE,EAAkB,EAAlBA,mBAEA,OACE,kBAAC,WAAQ,KAEP,kBAAC,EAAa,CACZN,UAAWA,EACXC,oBAAqBA,EACrBG,aAAcA,EACdE,mBAAoBA","file":"static/js/146.aef82099.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSortedProducts } from \"../../helpers/product\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopTopbar from \"../../wrappers/product/ShopTopbar\";\r\nimport ShopProducts from \"../../wrappers/product/ShopProducts\";\r\n\r\nconst ShopGridNoSidebar = ({ location, products }) => {\r\n  const [layout, setLayout] = useState(\"grid three-column\");\r\n  const sortType = \"\";\r\n  const sortValue = \"\";\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n\r\n  const pageLimit = 15;\r\n  const { pathname } = location;\r\n\r\n  const getLayout = layout => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Flone | Shop Page</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Shop\r\n      </BreadcrumbsItem>\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                {/* shop topbar default */}\r\n                <ShopTopbar\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopGridNoSidebar.propTypes = {\r\n  location: PropTypes.object,\r\n  products: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.productData.products\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShopGridNoSidebar);\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\n\r\nconst ShopTopAction = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        {/* <div className=\"shop-select\">\r\n          <select\r\n            onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">Default</option>\r\n            <option value=\"priceHighToLow\">Price - High to Low</option>\r\n            <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n          </select>\r\n        </div> */}\r\n        <p>\r\n          Showing {sortedProductCount} of {productCount} result\r\n        </p>\r\n      </div>\r\n\r\n      {/* <div className=\"shop-tab\">\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid three-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopAction\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        sortedProductCount={sortedProductCount}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n"],"sourceRoot":""}